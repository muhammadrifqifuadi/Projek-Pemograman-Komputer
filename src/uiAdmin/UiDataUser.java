/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package uiAdmin;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import kasirapk.connectData;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import logging.logging.ActivityLogger;

/**
 *
 * @author muqta
 */
public class UiDataUser extends javax.swing.JInternalFrame {

    private String userName;
    /**
     * Creates new form UiDataUser
     */
    public UiDataUser(String userName) {
        this.userName = userName; // autentikasi user login
        initComponents();
        loadDataUser();
        
        // Menonaktifkan tombol Edit dan Delete saat pertama kali dibuka
        btnEditUser.setEnabled(false);
        btnHapusUser.setEnabled(false);

        // Menambahkan ListSelectionListener ke tabel
        TabUser.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent event) {
                // Cek jika ada baris yang dipilih
                if (!event.getValueIsAdjusting() && TabUser.getSelectedRow() != -1) {
                    btnEditUser.setEnabled(true);
                    btnHapusUser.setEnabled(true);
                } else {
                    btnEditUser.setEnabled(false);
                    btnHapusUser.setEnabled(false);
                }
            }
        });
    }

    UiDataUser() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnTambahuser = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabUser = new javax.swing.JTable();
        btnEditUser = new javax.swing.JButton();
        btnHapusUser = new javax.swing.JButton();
        searchUser = new javax.swing.JTextField();
        btnCariUser = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Data User");

        btnTambahuser.setText("Tambah User");
        btnTambahuser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahuserActionPerformed(evt);
            }
        });

        TabUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID User", "Nama", "Email", "Role", "Username", "Password"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TabUser);

        btnEditUser.setText("Edit User");
        btnEditUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditUserActionPerformed(evt);
            }
        });

        btnHapusUser.setText("Delete User");
        btnHapusUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusUserActionPerformed(evt);
            }
        });

        btnCariUser.setText("cari");
        btnCariUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 631, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(searchUser, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCariUser, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnTambahuser, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEditUser, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnHapusUser, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCariUser))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTambahuser)
                    .addComponent(btnEditUser)
                    .addComponent(btnHapusUser))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadDataUser() {
        DefaultTableModel model = (DefaultTableModel) TabUser.getModel();
        model.setRowCount(0); // Reset tabel

        try {
            Connection con = connectData.getConnection();
            Statement st = con.createStatement();
            String query = "SELECT id_user, nama_user, email_user, role, username_user, password_user FROM tb_user"; 
            ResultSet rs = st.executeQuery(query);

            while (rs.next()) {
                String idUser = rs.getString("id_user");
                String nama = rs.getString("nama_user");
                String email = rs.getString("email_user");
                String role = rs.getString("role");
                String username = rs.getString("username_user");
                String password = rs.getString("password_user");
                
                // Tambahkan data ke model tabel
                model.addRow(new Object[]{idUser, nama, email, role, username, password});
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    private void btnTambahuserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahuserActionPerformed
        // TODO add your handling code here:
        UiInsertUser insertuser = new UiInsertUser(userName);
        insertuser.setVisible(true);
        loadDataUser();
    }//GEN-LAST:event_btnTambahuserActionPerformed

    private void btnEditUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditUserActionPerformed
        // TODO add your handling code here:
        int selectedRow = TabUser.getSelectedRow();
        if (selectedRow != -1) {
            String idUser = TabUser.getValueAt(selectedRow, 0).toString();
            String nama = TabUser.getValueAt(selectedRow, 1).toString();
            String email = TabUser.getValueAt(selectedRow, 2).toString();
            String role = TabUser.getValueAt(selectedRow, 3).toString();
            String username = TabUser.getValueAt(selectedRow, 4).toString();
            String password = TabUser.getValueAt(selectedRow, 5).toString();

            // Buka form edit dengan data pengguna yang dipilih
            UiEditData editUserForm = new UiEditData(idUser, nama, email, role, username, password, userName);
            editUserForm.setVisible(true);
            loadDataUser();
        }

    }//GEN-LAST:event_btnEditUserActionPerformed

    private void btnHapusUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusUserActionPerformed
        // TODO add your handling code here:
        int selectedRow = TabUser.getSelectedRow();
        if (selectedRow != -1) {
            String idUser = TabUser.getValueAt(selectedRow, 0).toString();
            // Konfirmasi dan hapus data dari database berdasarkan ID
            int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin menghapus user ini?", "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                try {
                    Connection con = connectData.getConnection();
                    Statement st = con.createStatement();
                    String deleteQuery = "DELETE FROM tb_user WHERE id_user = '" + idUser + "'";
                    st.executeUpdate(deleteQuery);
                    loadDataUser(); // Muat ulang data setelah penghapusan
                    ActivityLogger.logDeleteUser(this.userName, idUser);
                    JOptionPane.showMessageDialog(this, "Data user berhasil dihapus.");
                } catch (Exception e) {
                    e.printStackTrace();
                    ActivityLogger.logError(this.userName + " eror dalam menghapus data ");
                    JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menghapus data.");
                }
            }
        }
    }//GEN-LAST:event_btnHapusUserActionPerformed

    private void btnCariUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariUserActionPerformed
        // TODO add your handling code here:
        String keyword = searchUser.getText().trim();
        DefaultTableModel model = (DefaultTableModel) TabUser.getModel();
        model.setRowCount(0); // Reset tabel

        try {
            Connection con = connectData.getConnection();
            Statement st = con.createStatement();

            // Query untuk mencari data user berdasarkan ID, Nama, atau Email yang cocok dengan kata kunci
            String query = "SELECT id_user, nama_user, email_user, role, username_user, password_user " +
                           "FROM tb_user WHERE id_user LIKE '%" + keyword + "%' " +
                           "OR nama_user LIKE '%" + keyword + "%' " +
                           "OR email_user LIKE '%" + keyword + "%'";

            ResultSet rs = st.executeQuery(query);

            while (rs.next()) {
                String idUser = rs.getString("id_user");
                String nama = rs.getString("nama_user");
                String email = rs.getString("email_user");
                String role = rs.getString("role");
                String username = rs.getString("username_user");
                String password = rs.getString("password_user");

//                logging Activity
                ActivityLogger.logSearching(this.userName, idUser);
                // Tambahkan data ke model tabel
                model.addRow(new Object[]{idUser, nama, email, role, username, password});
            }

            // Pesan jika tidak ada data ditemukan
            if (model.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Data user tidak ditemukan.", "Pencarian", JOptionPane.INFORMATION_MESSAGE);
                ActivityLogger.logError(this.userName + "tidak menemukan id atau user yang di cari");
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat mencari data.");
            ActivityLogger.logError(this.userName + " Melakukan kesalahan dalam mencari data");
        }
    }//GEN-LAST:event_btnCariUserActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TabUser;
    private javax.swing.JButton btnCariUser;
    private javax.swing.JButton btnEditUser;
    private javax.swing.JButton btnHapusUser;
    private javax.swing.JButton btnTambahuser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField searchUser;
    // End of variables declaration//GEN-END:variables
}

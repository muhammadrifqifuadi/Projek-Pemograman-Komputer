/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package uiAdmin;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import kasirapk.connectData;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import logging.logging.ActivityLogger;

/**
 *
 * @author muqta
 */
public class DataProduk extends javax.swing.JInternalFrame {
    private String userName;
    /**
     * Creates new form DataProduk
     */
    public DataProduk(String userName) {
        this.userName = userName;
        initComponents();
        ViewProduk();
        
        // Menonaktifkan tombol Edit dan Delete saat pertama kali dibuka
        btnEditProduk.setEnabled(false);
        btnHapusProduk.setEnabled(false);
        
        // Menambahkan ListSelectionListener ke tabel
        TabProduk.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
        @Override
        public void valueChanged(ListSelectionEvent event) {
            // Cek jika ada baris yang dipilih
            if (!event.getValueIsAdjusting() && TabProduk.getSelectedRow() != -1) {
                 btnEditProduk.setEnabled(true);
                 btnHapusProduk.setEnabled(true);
            } else {
                btnEditProduk.setEnabled(false);
                btnHapusProduk.setEnabled(false);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnTambahProduk = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabProduk = new javax.swing.JTable();
        btnEditProduk = new javax.swing.JButton();
        btnHapusProduk = new javax.swing.JButton();
        searchUser = new javax.swing.JTextField();
        btnCariUser = new javax.swing.JButton();
        lbTitle = new javax.swing.JLabel();

        btnTambahProduk.setText("Tambah Produk");
        btnTambahProduk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahProdukActionPerformed(evt);
            }
        });

        TabProduk.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Produk", "Nama Produk", "Harga Beli", "Harga Jual", "Stok", "Satuan"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TabProduk);

        btnEditProduk.setText("Edit produk");
        btnEditProduk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditProdukActionPerformed(evt);
            }
        });

        btnHapusProduk.setText("Delete Produk");
        btnHapusProduk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusProdukActionPerformed(evt);
            }
        });

        btnCariUser.setText("cari");
        btnCariUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariUserActionPerformed(evt);
            }
        });

        lbTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbTitle.setText("Data Produk");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbTitle)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(searchUser, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCariUser, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnTambahProduk, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEditProduk, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnHapusProduk, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbTitle)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCariUser)
                    .addComponent(searchUser, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTambahProduk)
                    .addComponent(btnEditProduk)
                    .addComponent(btnHapusProduk))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ViewProduk(){
        DefaultTableModel model = (DefaultTableModel) TabProduk.getModel();
        model.setRowCount(0); // Reset tabel

        try {
            Connection con = connectData.getConnection();
            Statement st = con.createStatement();
            String query = "SELECT id_produk, nama_produk, harga_beli, harga_jual, stok, satuan FROM tb_produk"; 
            ResultSet rs = st.executeQuery(query);

            while (rs.next()) {
                String idProduk = rs.getString("id_Produk");
                String namaProduk = rs.getString("nama_produk");
                String hargaBeli = rs.getString("harga_beli");
                String hargaJual = rs.getString("harga_jual");  // Perbaiki typo
                String stok = rs.getString("stok");
                String satuan = rs.getString("satuan");
                
                // Tambahkan data ke model tabel
                model.addRow(new Object[]{idProduk, namaProduk, hargaBeli, hargaJual, stok, satuan});
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    
    }
    
    private void btnTambahProdukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahProdukActionPerformed
        // TODO add your handling code here:
        insertProduk insert = new insertProduk(userName);
        insert.setVisible(true);
    }//GEN-LAST:event_btnTambahProdukActionPerformed

    private void btnEditProdukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditProdukActionPerformed
        int selectedRow = TabProduk.getSelectedRow();
        if (selectedRow != -1) {
            String idProduk = TabProduk.getValueAt(selectedRow, 0).toString();
            String namaProduk = TabProduk.getValueAt(selectedRow, 1).toString();
            String hargaBeli = TabProduk.getValueAt(selectedRow, 2).toString();
            String hargaJual = TabProduk.getValueAt(selectedRow, 3).toString();
            String stok = TabProduk.getValueAt(selectedRow, 4).toString();
            String satuan = TabProduk.getValueAt(selectedRow, 5).toString();
            
            editProduk editProdukForm = new editProduk(idProduk, namaProduk, hargaBeli, hargaJual, stok, satuan, userName);
            editProdukForm.setVisible(true);

        }
    }//GEN-LAST:event_btnEditProdukActionPerformed

    private void btnHapusProdukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusProdukActionPerformed
        // TODO add your handling code here:
        int selectedRow = TabProduk.getSelectedRow();
        if (selectedRow != -1) {
            String idProduk = TabProduk.getValueAt(selectedRow, 0).toString();
            // Konfirmasi dan hapus data dari database berdasarkan ID
            int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin menghapus produk ini?", "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                try {
                    Connection con = connectData.getConnection();
                    Statement st = con.createStatement();
                    String deleteQuery = "DELETE FROM tb_produk WHERE id_produk = '" + idProduk + "'";
                    st.executeUpdate(deleteQuery);
                    ViewProduk(); // Muat ulang data setelah penghapusan
                    ActivityLogger.logDeleteProduk(this.userName, idProduk);
                    JOptionPane.showMessageDialog(this, "Data produk berhasil dihapus.");
                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menghapus data.");
                    ActivityLogger.logError(this.userName + " gagal menghapus produk");
                }
            }
        }
    }//GEN-LAST:event_btnHapusProdukActionPerformed

    private void btnCariUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariUserActionPerformed
        // TODO add your handling code here:
        String keyword = searchUser.getText().trim();
        DefaultTableModel model = (DefaultTableModel) TabProduk.getModel();
        model.setRowCount(0); // Reset tabel

        try {
            Connection con = connectData.getConnection();
            Statement st = con.createStatement();

            // Query untuk mencari data user berdasarkan ID, Nama, atau Email yang cocok dengan kata kunci
            String query = "SELECT id_produk, nama_produk, harga_beli, harga_jual, stok, satuan " +
            "FROM tb_produk WHERE id_produk LIKE '%" + keyword + "%' " +
            "OR nama_produk LIKE '%" + keyword + "%' ";

            ResultSet rs = st.executeQuery(query);

            while (rs.next()) {
                String idProduk = rs.getString("id_produk");
                String namaProduk = rs.getString("nama_produk");
                String hargaBeli = rs.getString("harga_beli");
                String hargaJual = rs.getString("harga_jual");  // Perbaiki typo
                String stok = rs.getString("stok");
                String satuan = rs.getString("satuan");

                // Tambahkan data ke model tabel
                model.addRow(new Object[]{idProduk, namaProduk, hargaBeli, hargaJual, stok, satuan});
                ActivityLogger.logSearchProduk(this.userName, idProduk);
            }

            // Pesan jika tidak ada data ditemukan
            if (model.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Data user tidak ditemukan.", "Pencarian", JOptionPane.INFORMATION_MESSAGE);
                ActivityLogger.logError(this.userName + " tidak menemukan produk yang di cari");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat mencari data.");
            ActivityLogger.logError(this.userName + " mengalami kesalahan dalam mencari data");
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnCariUserActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TabProduk;
    private javax.swing.JButton btnCariUser;
    private javax.swing.JButton btnEditProduk;
    private javax.swing.JButton btnHapusProduk;
    private javax.swing.JButton btnTambahProduk;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbTitle;
    private javax.swing.JTextField searchUser;
    // End of variables declaration//GEN-END:variables


}
